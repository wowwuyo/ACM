/*
 * Test Data
 * 12
5
1
2
3
2
1

1
0

12
7
4
0
9
4
8
8
2
4
5
5
1

2
1
1

5
134
134
135
136
136

7
132
132
123
132
123
144
566

0

1
333

7
22
22
22
23
22
23
23

5
132
132
132
132
132

6
1
2
3
2
4
5

11
1
2
3
5
11
12
444
2
6
7
15

-----------------
3
1
4
1
3
4
0
1
2
1
4
9


 *
 * */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

int N;
int result;
int list[1000001],rec[1000001];

int fun(int data[], int index){
	int max = 0, len = 0;
	int tail = 0, iLoop = 0,head = 0,temp = 0;
	//printf("index = %d\n",index);
	while(tail < index){
		//printf("tail = %d, len = %d\n", tail, len);
		if(rec[list[tail]] >= 0){
			temp = tail;
			tail = rec[list[tail]]+1;
			max = max < len ? len:max;
			len = 0;

			//printf("from %d to %d\n", tail, head);
			for(iLoop = head; iLoop <= temp; iLoop++)
				rec[list[iLoop]] = -1;

			head = tail;
		}
		else{
			rec[list[tail]]=tail;
			tail++;
			len++;
		}
	}

	max = max < len ? len:max;
	return max;
}

int main(void) {

	int N, count=0,dCount=0;
	int i_Count = 0, i_dCount = 0;

	/*Game Count*/
	scanf("%d",&count);
	for(i_Count = 0; i_Count < count; i_Count++){
		/*Data Count*/
		scanf("%d",&dCount);
		for(i_dCount = 0; i_dCount < dCount; i_dCount++){
			scanf("%d",&N);
			list[i_dCount] = N;
		}
		memset(rec,-1,sizeof(rec));
		printf("%d\n",fun(list, dCount));
	}
	return 0;
}
